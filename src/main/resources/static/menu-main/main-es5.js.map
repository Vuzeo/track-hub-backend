{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/availability/availability.component.ts","webpack:///src/app/availability/availability.component.html","webpack:///src/app/employees/employee-list/employee-list.component.ts","webpack:///src/app/employees/employee-list/employee-list.component.html","webpack:///src/app/employees/employee/employee.component.ts","webpack:///src/app/employees/employee/employee.component.html","webpack:///src/app/employees/employees.component.ts","webpack:///src/app/employees/employees.component.html","webpack:///src/app/enviroments/enviroment.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/page/page.component.ts","webpack:///src/app/project/project.component.ts","webpack:///src/app/project/project.component.html","webpack:///src/app/registries/registries.component.ts","webpack:///src/app/registries/registries.component.html","webpack:///src/app/reports/reports.component.ts","webpack:///src/app/reports/reports.component.html","webpack:///src/app/service/project.service.ts","webpack:///src/app/shared/employee.service.ts","webpack:///src/app/shared/notification.service.ts","webpack:///src/app/statistics/statistics.component.ts","webpack:///src/app/statistics/statistics.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","broadcastService","authService","title","isIE","window","navigator","userAgent","indexOf","loginRedirect","extraScopesToConsent","loginPopup","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","initializeApp","firebaseConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","popUp","consentScopes","unprotectedResources","protectedResourceMap","extraQueryParameters","declarations","providers","bootstrap","AvailabilityComponent","EmployeeListComponent","service","dialog","displayedColumns","getEmployees","subscribe","list","array","map","item","$key","key","payload","val","listData","sort","paginator","searchKey","applyFilter","filter","trim","toLowerCase","initializeFormGroup","dialogConfig","open","autoFocus","disableClose","width","row","populateForm","onCreate","EmployeeComponent","notificationService","dialogRef","form","reset","valid","insertEmployee","value","success","onClose","close","onSubmit","EmployeesComponent","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","HomeComponent","LoginComponent","fb","group","userName","required","password","field","get","touched","untouched","formSubmitAttempt","NavbarComponent","breakpointObserver","welcomeMessage","isHandset$","observe","Handset","pipe","result","matches","PageComponent","ProjectComponent","route","router","projectService","executeProjectService","res","content","RegistriesComponent","ReportsComponent","graphMeEndpoint","ProjectService","http","toPromise","profile","providedIn","EmployeeService","firebase","datePipe","firstName","lastName","email","phone","minLength","city","gender","status","jobTitle","Id","hireDate","isPermanent","setValue","employeeList","snapshotChanges","employee","push","transform","update","remove","NotificationService","snackBar","config","duration","horizontalPosition","verticalPosition","msg","StatisticsComponent","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PageComponent } from './page/page.component'; /**deprecated */\r\nimport { AvailabilityComponent } from './availability/availability.component';\r\nimport { EmployeesComponent } from \"./employees/employees.component\";\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { RegistriesComponent } from './registries/registries.component';\r\nimport { ReportsComponent } from './reports/reports.component';\r\nimport { StatisticsComponent } from './statistics/statistics.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { EmployeeListComponent } from \"./employees/employee-list/employee-list.component\";\r\nimport { EmployeeComponent } from \"./employees/employee/employee.component\";\r\nimport { LoginComponent } from './login/login.component';\r\nimport { MsalGuard } from \"@azure/msal-angular\";\r\n\r\n/**PageComponent je component koji se pojavljuje na inicijalizaciji page-a a ne Home\r\nRazlog zašto: brži loading jer se ne koristi lazy load metoda.\r\nKasnije se može putem router-link-a unutar komponente odrediti bolji landing page ali \r\nsada kako se koristi samo slika, radi demostracije je generaliziran da se duplicira**/\r\n\r\n/** 20,05,2020: Ne diraj dole komponente debug sam radio 2 dana i ovo mi palo na pamet */\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\", component: HomeComponent\r\n  },\r\n  { path: \"Home\", component: HomeComponent },\r\n  { path: \"availability\", component: AvailabilityComponent },\r\n  { path: \"employees\", component: EmployeesComponent },\r\n  { path: \"employee-list\", component: EmployeeListComponent },\r\n  { path: \"project\", component: ProjectComponent },\r\n  { path: \"registries\", component: RegistriesComponent },\r\n  { path: \"reports\", component: ReportsComponent },\r\n  { path: \"statistics\", component: StatisticsComponent },\r\n  { path: \"Navbartest\", component: NavbarComponent },\r\n  { path: \"employee\", component: EmployeeComponent },\r\n  { path: \"login\", component: LoginComponent, canActivate: [MsalGuard] }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { MsalService, BroadcastService } from '@azure/msal-angular';\r\nimport { OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'menu-main';\r\n  constructor(private broadcastService: BroadcastService, private authService: MsalService) { }\r\n  \r\n  ngOnInit(): void {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  login() {\r\n    const isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\r\n\r\n    if (isIE) {\r\n      this.authService.loginRedirect({\r\n        extraScopesToConsent: [\"user.read\", \"openid\", \"profile\"]\r\n      });\r\n    } else {\r\n      this.authService.loginPopup({\r\n        extraScopesToConsent: [\"user.read\", \"openid\", \"profile\"]\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <app-navbar></app-navbar>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n<!--Zovi komponente ovdje-->","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatCardModule } from \"@angular/material/card\"\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PageComponent } from './page/page.component';\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { StatisticsComponent } from './statistics/statistics.component';\r\nimport { AvailabilityComponent } from './availability/availability.component';\r\nimport { ReportsComponent } from './reports/reports.component';\r\nimport { RegistriesComponent } from './registries/registries.component';\r\nimport { EmployeesComponent } from './employees/employees.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { EmployeeListComponent } from './employees/employee-list/employee-list.component'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { EmployeeService } from './shared/employee.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { AngularFirestore } from \"@angular/fire/firestore\";\r\nimport { AngularFireDatabaseModule } from \"@angular/fire/database\";\r\nimport { AngularFireModule } from \"@angular/fire\";\r\nimport { environment } from \"./enviroments/enviroment\"\r\nimport { EmployeeComponent } from \"./employees/employee/employee.component\";\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ProjectService } from './service/project.service';\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { MsalModule } from \"@azure/msal-angular\";\r\nimport { MsalInterceptor } from \"@azure/msal-angular\";\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Logger } from 'msal';\r\n\r\nconst isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageComponent,\r\n    ProjectComponent,\r\n    StatisticsComponent,\r\n    AvailabilityComponent,\r\n    ReportsComponent,\r\n    RegistriesComponent,\r\n    EmployeesComponent,\r\n    HomeComponent,\r\n    NavbarComponent,\r\n    EmployeeListComponent,\r\n    EmployeeComponent,\r\n    LoginComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatButtonToggleModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatCardModule,\r\n    MatSidenavModule,\r\n    LayoutModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireDatabaseModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatAutocompleteModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    HttpClientModule,\r\n    // MsalModule.forRoot({\r\n    //   auth: {\r\n    //     clientId: \"7ae265c4-a783-4262-8927-fc33fc788254\"\r\n    //   }\r\n    // }),\r\n    MsalModule.forRoot({\r\n      auth: {\r\n        clientId: '7ae265c4-a783-4262-8927-fc33fc788254', // This is your client ID\r\n        authority: 'https://login.microsoftonline.com/b0101e28-a243-4f88-895e-af7d04d3c5d7', // This is your tenant ID\r\n        redirectUri: 'http://localhost:4200/'// This is your redirect URI\r\n      },\r\n      cache: {\r\n        cacheLocation: 'localStorage',\r\n        storeAuthStateInCookie: isIE, // Set to true for Internet Explorer 11\r\n      },\r\n    }, {\r\n      popUp: !isIE,\r\n      consentScopes: [\r\n        'user.read',\r\n        'openid',\r\n        'profile',\r\n      ],\r\n      unprotectedResources: [],\r\n      protectedResourceMap: [\r\n        ['https://graph.microsoft.com/v1.0/me', ['user.read']]\r\n      ],\r\n      extraQueryParameters: {}\r\n    })\r\n    // MsalModule.forRoot({\r\n    //   auth: {\r\n    //     clientId: '7ae265c4-a783-4262-8927-fc33fc788254',\r\n    //     authority: \"https://login.microsoftonline.com/common/\",\r\n    //     validateAuthority: true,\r\n    //     redirectUri: \"http://localhost:4200/\",\r\n    //     postLogoutRedirectUri: \"http://localhost:4200/\",\r\n    //     navigateToLoginRequestUrl: true,\r\n    //   },\r\n    //   cache: {\r\n    //     cacheLocation: \"localStorage\",\r\n    //     storeAuthStateInCookie: true, // set to true for IE 11\r\n    //   },\r\n    //   framework: {\r\n    //     unprotectedResources: [\"https://www.microsoft.com/en-us/\"],\r\n    //     protectedResourceMap: new Map(protectedResourceMap)\r\n    //   },\r\n    //   system: {\r\n    //     logger: new Logger(loggerCallback, options)\r\n    //   }\r\n    // }, {\r\n    //   popUp: !isIE,\r\n    //   consentScopes: [\"user.read\", \"openid\", \"profile\", \"api://a88bb933-319c-41b5-9f04-eff36d985612/access_as_user\"],\r\n    //   extraQueryParameters: {}\r\n    // })\r\n  ],\r\n  providers: [EmployeeService, DatePipe, AngularFirestore, MatDatepickerModule, ProjectService, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: MsalInterceptor,\r\n    multi: true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-availability',\r\n  templateUrl: './availability.component.html',\r\n  styleUrls: ['./availability.component.scss']\r\n})\r\nexport class AvailabilityComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 style=\"color: rgba(31, 31, 31, 0.85);\"></h1>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { EmployeeService } from 'src/app/shared/employee.service';\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\"\r\nimport { EmployeeComponent } from '../employee/employee.component';\r\n\r\n@Component({\r\n  selector: 'app-employee-list',\r\n  templateUrl: './employee-list.component.html',\r\n  styleUrls: ['./employee-list.component.scss']\r\n})\r\nexport class EmployeeListComponent implements OnInit {\r\n\r\n  constructor(public service: EmployeeService,\r\n    private dialog: MatDialog) { }\r\n\r\n  /**poziva u columns redoslijed informacija koje su unešene prilikom forme, u suštini ovo je u jednom dijelu CRUD operacija*/\r\n\r\n  listData: MatTableDataSource<any>;\r\n  displayedColumns: string[] = [\"firstName\", \"lastName\", \"email\", \"gender\", \"city\", \"phone\", \"hireDate\", \"jobTitle\", \"status\", \"Id\", \"actions\",];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  searchKey: string;\r\n\r\n  ngOnInit(): void {\r\n    this.service.getEmployees().subscribe(\r\n      list => {\r\n        let array = list.map(item => {\r\n          return {\r\n            $key: item.key,\r\n            ...item.payload.val()\r\n          };\r\n        });\r\n        this.listData = new MatTableDataSource(array);\r\n        this.listData.sort = this.sort;\r\n        this.listData.paginator = this.paginator;\r\n      });\r\n  }\r\n\r\n  onSearchClear() {\r\n    this.searchKey = \"\";\r\n    this.applyFilter();\r\n  }\r\n\r\n  applyFilter() {\r\n    this.listData.filter = this.searchKey.trim().toLowerCase();\r\n  }\r\n\r\n  onCreate() {\r\n    this.service.initializeFormGroup();\r\n    const dialogConfig = new MatDialogConfig();\r\n    this.dialog.open(EmployeeComponent, dialogConfig);\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.width = \"40%\";\r\n  }\r\n\r\n  onEdit(row) {\r\n    this.service.populateForm(row)\r\n    const dialogConfig = new MatDialogConfig();\r\n    this.dialog.open(EmployeeComponent, dialogConfig);\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.width = \"40%\";\r\n    this.dialog.open(EmployeeComponent, dialogConfig)\r\n  }\r\n}\r\n","<div class=\"container search-div\">\r\n    <button mat-raised-button (click)=\"onCreate()\">\r\n        <mat-icon>add</mat-icon>Create\r\n    </button>\r\n    <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\r\n        <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\">\r\n        <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </mat-form-field>\r\n</div>\r\n<div class=\"container mat-elevation-z8\">\r\n    <mat-table [dataSource]=\"listData\" matSort>\r\n        <ng-container matColumnDef=\"firstName\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Ime</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">{{element.firstName}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"actions\">\r\n            <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n            <mat-cell *matCellDef=\"let row\">\r\n                <button mat-icon-button click=\"onEdit(row)\">\r\n                    <mat-icon>launch</mat-icon>\r\n                </button>\r\n                <button mat-icon-button color=\"warn\">\r\n                    <mat-icon>delete_outline</mat-icon>\r\n                </button>\r\n            </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"lastName\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Prezime</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">{{element.lastName}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"email\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">{{element.email}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"phone\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Phone</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">{{element.phone}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"city\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>City</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">{{element.city}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"gender\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Gender</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">{{element.gender}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"hireDate\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Hire Date</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">{{element.hireDate}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"jobTitle\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Job Title</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">{{element.jobTitle}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"status\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">{{element.status}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"Id\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">{{element.Id}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"loading\">\r\n            <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n                Loading... if it takes too long contact admin..\r\n            </mat-footer-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"noData\">\r\n            <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n                No data found.\r\n            </mat-footer-cell>\r\n        </ng-container>\r\n        <!--listData je iz ts.a ove komponente i to je data source-->\r\n        <!--ovo su templates za header header-row i za element mat-row-->\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        <!--karakteristike i varijable za kreaciju tabele-->\r\n        <!--footer koristimo za prikaz loading rečenice a također i u slučaju ako nema podataka da prikaže \"No data.\"-->\r\n        <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':listData!=null}\"></mat-footer-row>\r\n        <mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(listData!=null && listData.data.length==0)}\">\r\n        </mat-footer-row>\r\n    </mat-table>\r\n    <!--kontrola količine podataka-->\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" [pageSize]=\"5\" showFirstLastButtons></mat-paginator>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeService } from '../../shared/employee.service';\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { NotificationService } from 'src/app/shared/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.scss']\r\n})\r\n\r\n\r\nexport class EmployeeComponent implements OnInit {\r\n\r\n  constructor(public service: EmployeeService,\r\n    private notificationService: NotificationService,\r\n    public dialogRef: MatDialogRef<EmployeeComponent>\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.service.getEmployees();\r\n  }\r\n\r\n  onClear() {\r\n    this.service.form.reset();\r\n    this.service.initializeFormGroup();\r\n  }\r\n\r\n  /**funkcija koja šalje podatke u firebase */\r\n\r\n  onSubmit() {\r\n    if (this.service.form.valid) {\r\n      this.service.insertEmployee(this.service.form.value);\r\n      this.service.form.reset();\r\n      this.service.initializeFormGroup();\r\n      this.notificationService.success(\":: Submitted successfully!\");\r\n\r\n      this.onClose();\r\n    }\r\n  }\r\n\r\n  onClose() {\r\n    this.service.form.reset();\r\n    this.service.initializeFormGroup();\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\n","<section class=\"center\">\r\n    <div class=\"box\">\r\n        <form [formGroup]=\"service.form\" class=\"normal-form\" (submit)=\"onSubmit()\" n>\r\n            <div class=\"controles-container\">\r\n                <input type=\"hidden\" formControlName=\"$key\">\r\n                <mat-form-field>\r\n                    <input formControlName=\"firstName\" matInput placeholder=\"First Name*\">\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field>\r\n                    <input formControlName=\"lastName\" matInput placeholder=\"Last Name*\">\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field>\r\n                    <input formControlName=\"phone\" matInput placeholder=\"Phone*\">\r\n                    <mat-error *ngIf=\"service.form.controls['phone'].errors?.required\">This field is mandatory.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"service.form.controls['phone'].errors?.minlength\">Minimum 8 charactors\r\n                        needed.</mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select matInput formControlName=\"gender\">\r\n                        <mat-option value=\"Male\">Male</mat-option>\r\n                        <mat-option value=\"Female\">Female</mat-option>\r\n                        <mat-option value=\"Trans (Male)\">Trans(Male)</mat-option>\r\n                        <mat-option value=\"Trans (Female)\">Trans(Female)</mat-option>\r\n                        <mat-option value=\"Non-Binary\">Non-Binary</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field>\r\n                    <input formControlName=\"city\" matInput placeholder=\"City\">\r\n                    <mat-error>Invalid city name.</mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field>\r\n                    <input formControlName=\"email\" matInput placeholder=\"Email\">\r\n                    <mat-error>Invalid email address.</mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>Choose a date</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"hireDate\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n                        <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n                    </mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field>\r\n                    <input formControlName=\"jobTitle\" matInput placeholder=\"Job title*\">\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n\r\n\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>Status</mat-label>\r\n                    <mat-select formControlName=\"status\">\r\n                        <mat-option value=\"At work\">At work</mat-option>\r\n                        <mat-option value=\"Holiday absence\">Holiday absence</mat-option>\r\n                        <mat-option value=\"Business Trip\">Business Trip</mat-option>\r\n                        <mat-option value=\"Sickness absence\">Sickness absence</mat-option>\r\n                        <mat-option value=\"Maternity absence\">Maternity absence</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n\r\n\r\n                <div class=\"add-bottom-padding\">\r\n                    <mat-checkbox formControlName=\"isPermanent\">Permanent Employee</mat-checkbox>\r\n                </div>\r\n\r\n\r\n                <div class=\"button-row\">\r\n                    <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\r\n                    <button mat-raised-button color=\"warn\">Clear</button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </form>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\"\r\nimport { EmployeeService } from '../shared/employee.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-employees',\r\n  templateUrl: './employees.component.html',\r\n  styleUrls: ['./employees.component.scss']\r\n})\r\nexport class EmployeesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <app-employee-list></app-employee-list>\r\n</div>","export const environment = {\r\n    production: false,\r\n    firebaseConfig: {\r\n        apiKey: \"AIzaSyA6HWJ6ygB9WpB1mwe4BgJvwKYDD3dvD2M\",\r\n        authDomain: \"zira-9c1db.firebaseapp.com\",\r\n        databaseURL: \"https://zira-9c1db.firebaseio.com\",\r\n        projectId: \"zira-9c1db\",\r\n        storageBucket: \"zira-9c1db.appspot.com\",\r\n        messagingSenderId: \"21873194427\",\r\n        appId: \"1:21873194427:web:8128ab69cb1006893ac09e\",\r\n        measurementId: \"G-Z9CHZ72ELN\"\r\n    }\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"container\">\r\n    <div class=\"box\">\r\n        <img class=\"banner-image z-depth-3\" src=\"assets/images/image.svg\" alt=\"image\"></div>\r\n</section>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup;\r\n  private formSubmitAttempt: boolean;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      // we want the fields to be required\r\n      userName: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  isFieldInvalid(field: string) {\r\n    return (\r\n      (!this.form.get(field).valid && this.form.get(field).touched) ||\r\n      (this.form.get(field).untouched && this.formSubmitAttempt)\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    /* if (this.form.valid) {\r\n      this.authService.login(this.form.value); // to figure out\r\n    } */\r\n    this.formSubmitAttempt = true;\r\n  }\r\n}\r\n","<div class=\"signin-content\">\r\n  <mat-card>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <p>Please login to continue</p>\r\n        <mat-form-field class=\"full-width-input\">\r\n          <input\r\n            matInput\r\n            placeholder=\"User\"\r\n            formControlName=\"userName\"\r\n            required\r\n          />\r\n          <mat-error *ngIf=\"isFieldInvalid('userName')\">\r\n            Please provide your username\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"full-width-input\">\r\n          <input\r\n            matInput\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            formControlName=\"password\"\r\n            required\r\n          />\r\n          <mat-error *ngIf=\"isFieldInvalid('userName')\">\r\n            Please provide your password\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <button\r\n          mat-raised-button\r\n          style=\"background-color: #044060; color: rgb(236, 236, 236);\"\r\n        >\r\n          Login\r\n        </button>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent {\r\n\r\n  welcomeMessage = 'Test';\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) { }\r\n\r\n  ngOnInit() { }\r\n}\r\n","<!--inicijalizacija sidenav komponente-->\r\n\r\n<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav\r\n    #drawer\r\n    class=\"sidenav\"\r\n    fixedInViewport\r\n    [attr.role]=\"true\"\r\n    [attr.role]=\"isHandset$ ? '˙dialog' : 'navigation'\"\r\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n    [opened]=\"(isHandset$ | async) === false\"\r\n  >\r\n    <mat-toolbar>\r\n      <!--inicijalizacija gornje trake-->\r\n    </mat-toolbar>\r\n    <mat-nav-list class=\"list-items\">\r\n      <div class=\"spacer\">\r\n        <!--\"hyperlink\" koji vodi na Home-->\r\n\r\n        <a routerLink=\"/Home\">\r\n          <img\r\n            class=\"center\"\r\n            src=\"assets/images/ZIRAa.svg\"\r\n            (click)=\"drawer.toggle()\"\r\n          />\r\n        </a>\r\n      </div>\r\n\r\n      <!--linkovi i routerLink-ovi na druge stranice-->\r\n\r\n      <a\r\n        routerLink=\"/Home\"\r\n        routerLinkActive=\"selected\"\r\n        class=\"list-item\"\r\n        (click)=\"drawer.toggle()\"\r\n      >\r\n        <i class=\"material-icons\">home</i>Home</a\r\n      >\r\n\r\n      <a\r\n        routerLink=\"/project\"\r\n        routerLinkActive=\"selected\"\r\n        class=\"list-item\"\r\n        (click)=\"drawer.toggle()\"\r\n      >\r\n        <i class=\"material-icons\">next_week</i>Projects</a\r\n      >\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <!--sadržaj-->\r\n\r\n    <mat-toolbar color=\"accent\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n      >\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n\r\n      <!--spaceri su ljubav kada se treba odmaknuti ikona na desnu stranu-->\r\n\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n      <span class=\"spacer\"></span>\r\n\r\n      <!--temp logo za account-->\r\n\r\n      <span class=\"material-icons spacer\">account_circle</span>\r\n    </mat-toolbar>\r\n    <ng-content>\r\n      <!--wrapper za kasnije-->\r\n    </ng-content>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page',\r\n  templateUrl: './page.component.html',\r\n  styleUrls: ['./page.component.scss']\r\n})\r\nexport class PageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ProjectService } from '../service/project.service';\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.scss']\r\n})\r\nexport class ProjectComponent implements OnInit {\r\n\r\n  welcomeMessage = '';\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router, private projectService: ProjectService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectService.executeProjectService().subscribe((res) => {\r\n      this.welcomeMessage = res.content;\r\n    });\r\n  }\r\n\r\n}\r\n","<h1 style=\"color: rgba(31, 31, 31, 0.85);\"></h1>\r\n<div class=\"container ml-4\">\r\n    Message from server -> <h1>{{this.welcomeMessage}}</h1>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-registries',\r\n  templateUrl: './registries.component.html',\r\n  styleUrls: ['./registries.component.scss']\r\n})\r\nexport class RegistriesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 style=\"color: rgba(31, 31, 31, 0.85);\"></h1>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.scss']\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 style=\"color: rgba(31, 31, 31, 0.85);\"></h1>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MessageModel } from '../model/message';\r\n\r\nconst graphMeEndpoint = \"https://graph.microsoft.com/v1.0/me\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  profile: Object;\r\n\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  getProfile() {\r\n    this.http.get(graphMeEndpoint).toPromise()\r\n      .then(profile => {\r\n        this.profile = profile;\r\n      });\r\n  }\r\n\r\n  executeProjectService() {\r\n    return this.http.get<MessageModel>('http://localhost:8080/api/v1/greeting');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\r\nimport { DatePipe } from '@angular/common';\r\nimport * as _ from \"lodash\";\r\nimport { omit } from 'lodash';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n    constructor(private firebase: AngularFireDatabase, public datePipe: DatePipe) { }\r\n\r\n    employeeList: AngularFireList<any>;\r\n\r\n    public form: FormGroup = new FormGroup({\r\n        $key: new FormControl(null),\r\n        firstName: new FormControl('', Validators.required),\r\n        lastName: new FormControl('', Validators.required),\r\n        email: new FormControl('', Validators.email),\r\n        phone: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n        city: new FormControl(''),\r\n        gender: new FormControl('1'),\r\n        status: new FormControl(\"\"),\r\n        jobTitle: new FormControl(''),\r\n        Id: new FormControl(''),\r\n        hireDate: new FormControl(''),\r\n        isPermanent: new FormControl(false)\r\n    });\r\n\r\n    initializeFormGroup() {\r\n        this.form.setValue({\r\n            $key: null,\r\n            firstName: '',\r\n            lastName: \"\",\r\n            email: '',\r\n            phone: '',\r\n            city: '',\r\n            gender: '1',\r\n            status: \"\",\r\n            hireDate: '',\r\n            jobTitle: \"\",\r\n            Id: 0,\r\n            isPermanent: false\r\n        });\r\n    }\r\n\r\n\r\n    getEmployees() {\r\n        this.employeeList = this.firebase.list('employees');\r\n        return this.employeeList.snapshotChanges();\r\n    }\r\n\r\n    insertEmployee(employee) {\r\n        this.employeeList.push({\r\n            firstName: employee.firstName,\r\n            lastName: employee.lastName,\r\n            email: employee.email,\r\n            phone: employee.phone,\r\n            city: employee.city,\r\n            gender: employee.gender,\r\n            status: employee.status,\r\n            hireDate: employee.hireDate == \"\" ? \"\" : this.datePipe.transform(employee.hireDate, 'yyyy-MM-dd'),\r\n            jobTitle: employee.jobTitle,\r\n            Id: employee.Id,\r\n            isPermanent: employee.isPermanent\r\n        });\r\n    }\r\n\r\n    updateEmployee(employee) {\r\n        this.employeeList.update(employee.$key,\r\n            {\r\n                firstName: employee.firstName,\r\n                lastName: employee.lastName,\r\n                email: employee.email,\r\n                phone: employee.phone,\r\n                city: employee.city,\r\n                gender: employee.gender,\r\n                status: employee.status,\r\n                hireDate: employee.hireDate == \"\" ? \"\" : this.datePipe.transform(employee.hireDate, 'yyyy-MM-dd'),\r\n                jobTitle: employee.jobTitle,\r\n                Id: employee.Id,\r\n                isPermanent: employee.isPermanent\r\n            });\r\n    }\r\n\r\n    deleteEmployee($key: string) {\r\n        this.employeeList.remove($key);\r\n    }\r\n\r\n    populateForm(employee) {\r\n        this.form.setValue(omit(employee));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n\r\n  constructor(public snackBar: MatSnackBarModule) { }\r\n\r\n  config: MatSnackBarModule = {\r\n    duration: 3000,\r\n    horizontalPosition: 'right',\r\n    verticalPosition: 'top'\r\n  }\r\n\r\n\r\n  success(msg) {\r\n    this.config['panelClass'] = ['notification', 'success'];\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-statistics',\r\n  templateUrl: './statistics.component.html',\r\n  styleUrls: ['./statistics.component.scss']\r\n})\r\nexport class StatisticsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 style=\"color: rgba(31, 31, 31, 0.85);\"></h1>","export const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: \"AIzaSyA6HWJ6ygB9WpB1mwe4BgJvwKYDD3dvD2M\",\r\n    authDomain: \"zira-9c1db.firebaseapp.com\",\r\n    databaseURL: \"https://zira-9c1db.firebaseio.com\",\r\n    projectId: \"zira-9c1db\",\r\n    storageBucket: \"zira-9c1db.appspot.com\",\r\n    messagingSenderId: \"21873194427\",\r\n    appId: \"1:21873194427:web:8128ab69cb1006893ac09e\",\r\n    measurementId: \"G-Z9CHZ72ELN\"\r\n  }\r\n};","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}